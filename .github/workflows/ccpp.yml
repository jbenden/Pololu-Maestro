name: C/C++ CI

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Installing libusb (linux)
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: sudo apt-get install libusb-1.0-0-dev

    - run: mkdir build

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.1

    - name: Configure
      working-directory: build
      shell: bash
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install ..

    - name: Build
      working-directory: build
      shell: bash
      run: cmake --build . --config Release

  quality:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Installing libusb (linux)
      shell: bash
      run: sudo apt-get install libusb-1.0-0-dev

    - run: mkdir build

    - name: Install PVS-Studio
      shell: bash
      run: |
        wget -q -O - https://files.viva64.com/etc/pubkey.txt \
          | sudo apt-key add -
        sudo wget -O /etc/apt/sources.list.d/viva64.list \
          https://files.viva64.com/etc/viva64.list
        sudo apt-get update -qq
        sudo apt-get install -qq pvs-studio

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        version: 5.15.1

    - name: Configure
      working-directory: build
      shell: bash
      run: cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=install ..

    - name: Build
      working-directory: build
      shell: bash
      run: cmake --build . --config Release

    - name: PVS-Studio Scan
      working-directory: build
      shell: bash
      env:
        PVS_USERNAME: ${{ secrets.PVS_USERNAME }}
        PVS_KEY: ${{ secrets.PVS_KEY }}
      run: |
        pvs-studio-analyzer credentials $PVS_USERNAME $PVS_KEY

        if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
          git diff --name-only origin/HEAD > .pvs-pr.list
          pvs-studio-analyzer analyze -j8 \
                                      -o PVS-Studio.log \
                                      -S .pvs-pr.list \
                                      --disableLicenseExpirationCheck
        else
          pvs-studio-analyzer analyze -j8 \
                                      -o PVS-Studio.log \
                                      --disableLicenseExpirationCheck
        fi

        plog-converter -t errorfile PVS-Studio.log --cerr -w
